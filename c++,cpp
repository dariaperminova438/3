#include <iostream>
using namespace std;

// Функция для сортировки вставками
void insertionSort(int arr[], int n) {
    // Начинаем со второго элемента (индекс 1)
    // Первый элемент считается отсортированной частью
    for (int i = 1; i < n; i++) {
        // Сохраняем текущий элемент, который будем вставлять
        int key = arr[i];
        
        // Индекс для перемещения по отсортированной части
        // Начинаем с элемента перед текущим
        int j = i - 1;
        
        // Перемещаем элементы отсортированной части, которые больше key,
        // на одну позицию вправо
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];  // Сдвигаем элемент вправо
            j = j - 1;            // Переходим к следующему элементу слева
        }
        
        // Вставляем key на правильную позицию
        arr[j + 1] = key;
    }
}

// Вспомогательная функция для вывода массива
void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Основная функция для тестирования
int main() {
    // Создаем тестовый массив
    int arr[] = {12, 11, 13, 5, 6};
    
    // Вычисляем размер массива
    int n = sizeof(arr) / sizeof(arr[0]);
    
    // Выводим исходный массив
    cout << "Исходный массив: ";
    printArray(arr, n);
    
    // Сортируем массив
    insertionSort(arr, n);
    
    // Выводим отсортированный массив
    cout << "Отсортированный массив: ";
    printArray(arr, n);
    
    return 0;
}
